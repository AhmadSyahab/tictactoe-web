// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the NavBar App should have PlayGame 1`] = `
ShallowWrapper {
  "length": 0,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <App />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="App"
>
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    path="/avatar"
                    render={[Function]}
          />
          <Route
                    exact={true}
                    path="/play"
                    render={[Function]}
          />
          <Route
                    path="/play/create"
                    render={[Function]}
          />
          <Route
                    path="/play/join"
                    render={[Function]}
          />
          <Footer />
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              exact={true}
              path="/"
/>,
            <Route
              path="/avatar"
              render={[Function]}
/>,
            <Route
              exact={true}
              path="/play"
              render={[Function]}
/>,
            <Route
              path="/play/create"
              render={[Function]}
/>,
            <Route
              path="/play/join"
              render={[Function]}
/>,
            <Footer />,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/avatar",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/play",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/play/create",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/play/join",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="App"
>
            <Route
                        component={[Function]}
                        exact={true}
                        path="/"
            />
            <Route
                        path="/avatar"
                        render={[Function]}
            />
            <Route
                        exact={true}
                        path="/play"
                        render={[Function]}
            />
            <Route
                        path="/play/create"
                        render={[Function]}
            />
            <Route
                        path="/play/join"
                        render={[Function]}
            />
            <Footer />
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
/>,
              <Route
                path="/avatar"
                render={[Function]}
/>,
              <Route
                exact={true}
                path="/play"
                render={[Function]}
/>,
              <Route
                path="/play/create"
                render={[Function]}
/>,
              <Route
                path="/play/join"
                render={[Function]}
/>,
              <Footer />,
            ],
            "className": "App",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/avatar",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/play",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/play/create",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/play/join",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): undefined,
  Symbol(enzyme.__nodes__): Array [],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Testing the NavBar It Should have Login Form 1`] = `
ShallowWrapper {
  "length": 0,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <App />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="App"
>
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    path="/avatar"
                    render={[Function]}
          />
          <Route
                    exact={true}
                    path="/play"
                    render={[Function]}
          />
          <Route
                    path="/play/create"
                    render={[Function]}
          />
          <Route
                    path="/play/join"
                    render={[Function]}
          />
          <Footer />
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              exact={true}
              path="/"
/>,
            <Route
              path="/avatar"
              render={[Function]}
/>,
            <Route
              exact={true}
              path="/play"
              render={[Function]}
/>,
            <Route
              path="/play/create"
              render={[Function]}
/>,
            <Route
              path="/play/join"
              render={[Function]}
/>,
            <Footer />,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/avatar",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/play",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/play/create",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/play/join",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="App"
>
            <Route
                        component={[Function]}
                        exact={true}
                        path="/"
            />
            <Route
                        path="/avatar"
                        render={[Function]}
            />
            <Route
                        exact={true}
                        path="/play"
                        render={[Function]}
            />
            <Route
                        path="/play/create"
                        render={[Function]}
            />
            <Route
                        path="/play/join"
                        render={[Function]}
            />
            <Footer />
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
/>,
              <Route
                path="/avatar"
                render={[Function]}
/>,
              <Route
                exact={true}
                path="/play"
                render={[Function]}
/>,
              <Route
                path="/play/create"
                render={[Function]}
/>,
              <Route
                path="/play/join"
                render={[Function]}
/>,
              <Footer />,
            ],
            "className": "App",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/avatar",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/play",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/play/create",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "path": "/play/join",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): undefined,
  Symbol(enzyme.__nodes__): Array [],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Testing the NavBar It should render the button 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <button
    aria-controls="navbarColor01"
    aria-expanded="false"
    aria-label="Toggle navigation"
    className="navbar-toggler"
    data-target="#navbarColor01"
    data-toggle="collapse"
    type="button"
>
    <span
        className="navbar-toggler-icon"
    />
</button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-controls": "navbarColor01",
      "aria-expanded": "false",
      "aria-label": "Toggle navigation",
      "children": <span
        className="navbar-toggler-icon"
/>,
      "className": "navbar-toggler",
      "data-target": "#navbarColor01",
      "data-toggle": "collapse",
      "type": "button",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "navbar-toggler-icon",
      },
      "ref": null,
      "rendered": null,
      "type": "span",
    },
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-controls": "navbarColor01",
        "aria-expanded": "false",
        "aria-label": "Toggle navigation",
        "children": <span
          className="navbar-toggler-icon"
/>,
        "className": "navbar-toggler",
        "data-target": "#navbarColor01",
        "data-toggle": "collapse",
        "type": "button",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "navbar-toggler-icon",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Testing the NavBar It should render the form 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <form
    className="form-inline my-2 my-lg-0"
>
    <button
        className="btn btn-danger my-2 my-sm-0"
        type="submit"
    >
        Logout
    </button>
</form>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <button
        className="btn btn-danger my-2 my-sm-0"
        type="submit"
>
        Logout
</button>,
      "className": "form-inline my-2 my-lg-0",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Logout",
        "className": "btn btn-danger my-2 my-sm-0",
        "type": "submit",
      },
      "ref": null,
      "rendered": "Logout",
      "type": "button",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <button
          className="btn btn-danger my-2 my-sm-0"
          type="submit"
>
          Logout
</button>,
        "className": "form-inline my-2 my-lg-0",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Logout",
          "className": "btn btn-danger my-2 my-sm-0",
          "type": "submit",
        },
        "ref": null,
        "rendered": "Logout",
        "type": "button",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
